function makeGoldMap(coins) {
    let template = [];
    for (let i = 0; i < 10; i++) {
        template[i] = [];
        for (let j = 0; j < 2 * 10 - 1; j++) {template[i][j] = 0;}
    }
    for (let c = 0; c < coins.length; c++) {
        let row = Math.floor((coins[c].pos.y - 14) / 6);
        let col = Math.floor((coins[c].pos.x - 14) / 4);
        template[row][col] = coins[c].value;
    }
    return template;
}
function analyze(map) {
    for (let r = map.length - 2; r >= 0; r--) {
        let row = map[r];
        for (let c = 0; c < row.length; c++) {
            if (row[c] === 0) {continue;}
            if (c === 0) {map[r][c] += map[r + 1][c+1];}
            else if (c === row.length - 1) {map[r][c] += map[r+1][c-1];}
            else {map[r][c] += Math.max(map[r+1][c-1], map[r+1][c+1]);}
        }
    }
    return map;
}
function startColumn(map) {
    let column = 0;
    let value = 0;
    for (let i = 0; i < map[0].length; i++) {
        if (map[0][i] > value) {
            value = map[0][i];
            column = i;
        }
    }
    return column;
}
function findPath (map, column) {
    let path = [];
    for (let i = 0; i < map.length - 1; i++) {
        if (column === 0) {
            path.push("r");
            column += 1;
        } else if (column === map[i].length - 1) {
            path.push("l");
            column -= 1;
        } else {
            if (map[i+1][column-1] < map[i+1][column+1]) {
                path.push("r");
                column += 1;
            } else {
                path.push("l");
                column -= 1;
            }
        }
    }
    return path;
}

const analyzed = analyze(makeGoldMap(hero.findItems()));
const first = startColumn(analyzed);
const path = findPath(analyzed, first);

function start() {
    hero.moveXY(hero.pos.x, 8);
    hero.moveXY((first * 4) + 14, 8);
    hero.moveXY((first * 4) + 14, 14);
}
function next() {
    for (let i = 0; i < path.length; i ++) {
        if (path[i] === "l") {hero.moveXY(hero.pos.x - 4, hero.pos.y + 6);}
        else if (path[i] === "r") {hero.moveXY(hero.pos.x + 4, hero.pos.y + 6);}
    }
}
function end() {
    hero.moveXY(hero.pos.x, hero.pos.y + 6);
}

start();
next();
end();
